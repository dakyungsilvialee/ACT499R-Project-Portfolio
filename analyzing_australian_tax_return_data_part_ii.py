# -*- coding: utf-8 -*-
"""Analyzing Australian Tax Return Data_Part II.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/199Ssx4iofMyzfDvFjZtuZEXW31dps6r5

# Analyzing Australian Tax Return Data- Part II

## Background Information

In this case study you will explore Australian corporations’ tax return data. Australia (unlike the United States) publicly discloses three line items from large corporations’ tax returns. The three line items disclosed are:

- **Total Income**- Total income is a measure of a company’s gross receipts or revenue. It does not include any deductions or expenses.


- **Taxable Income** - Taxable income is a measure of a company’s profitability based on Australian tax law. Taxable income is the basis from which a company’s income tax liability is calculated.
   - The difference between a company’s total income and it’s taxable income is the amount of tax deductions or expenses a company claims on its tax return.
   
<center> <font color = blue> <font size = 4> $Taxable Income$ <font color = black> $=$ <font color = red> $Total  Income$ <font color = black> $- Tax Deductions$ </center>

   - Taxable income is separate and distinct from a company’s financial accounting income. Although both financial accounting income and taxable income measure a firm’s profitability, they are calculated differently.
      - Financial accounting income is designed to measure a firm’s economic transactions and to be as informative as possible to investors and creditors.
      - Taxable income is defined by the government and is designed to raise money and to encourage or discourage certain behaviors. For example, in the United States, we are allowed to deduct interest incurred on a household mortgage because the government wants to encourage home ownership.


- **Tax Payable**- Tax payable is a company’s Australian income tax liability and measures the amount of income taxes that the company must pay to Australia’s federal government.
   - Tax payable is a function of a company’s taxable income. If the company does not claim any tax credits, tax payable will equal 30% of a company’s taxable income. 30% is the corporate income tax rate in Australia. 
   
<center> <font color = green> <font size = 4> $Tax Payable$ <font color = black> $=$ <font color = blue> $Taxable Income$ <font color = black> $*Tax Rate (30\%\ in Australia)$ </center>

   - Tax payable will be less than a company’s taxable income times the income tax rate if the company claims any tax credits.

<center> <font color = green> <font size = 4> $Tax Payable$ <font color = black> $=$ <font color = blue> $Taxable Income$ <font color = black> $*30\%-Tax Credits$ </center>
	
   - Tax credits are a way for the government to subsidize certain corporate activities. Tax credits allow the government to indirectly pay a corporation back for the amount of money a corporation spent on a certain activity. For instance, in the United States, some students qualify for tuition tax credits. By giving a student a tuition tax credit, the government allows a student to pay less taxes than the amount the student would normally owe based on the student’s taxable income. This way, the student can pay for the student’s tuition with the money the student saved by not paying taxes. These transactions are an indirect way for the government to pay for the student’s tuition. In corporations, the most common tax credit is for research and development (R&D). Many governments want to encourage R&D as innovation often leads to economic growth.

The following equation summarizes the relationship between the three variables:

<center> <font size = 4> <font color = red> $(Total Income$ </font> $-Tax Deductions)*30\%-Tax Credits=$ <font color = green> $Tax Payable$ </font> </center>

The Australian government started to publicly disclose large corporation’s tax return information in December 2015. Due to the long nature of the tax reporting cycle, information disclosed in December 2015 relates to tax returns for years ending December 1, 2013 – November 30th, 2014 (most Australian firms have a June 30th year end).

The Australian government’s tax transparency legislation has two stated objectives: 

> 1. Discourage large corporate entities from engaging in aggressive tax avoidance practices
> 2. Provide more information to inform public debate about tax policy
> *Australian Senate 2013* 
    
    
Australian legislators hoped that if large firms were forced to report their tax information, public shaming would cause low tax paying firms (firms that engage in a lot of tax planning) to pay more taxes. In this case study, you will explore that idea.
"""

# set up your notebook

import pandas as pd
import numpy as np
pd.options.display.float_format = '{:,.2f}'.format

# reimport the pickle file
final = pd.read_pickle('part1.p')
final

"""## Calculate your Results - #1

**a.**	How much total tax did the ATO collect from our sample firms in each year?
"""

Tax_payable_2013 = final.loc[final['Income Year'] == 2013, 'Tax payable'].sum()
Tax_payable_2014 = final.loc[final['Income Year'] == 2014, 'Tax payable'].sum()
Tax_payable_2015 = final.loc[final['Income Year'] == 2015, 'Tax payable'].sum()
Tax_payable_2016 = final.loc[final['Income Year'] == 2016, 'Tax payable'].sum()
Tax_payable_2017 = final.loc[final['Income Year'] == 2017, 'Tax payable'].sum()
Tax_payable_2018 = final.loc[final['Income Year'] == 2018, 'Tax payable'].sum()
Tax_payable_2019 = final.loc[final['Income Year'] == 2019, 'Tax payable'].sum()

years = [2013, 2014, 2015, 2016, 2017, 2018, 2019]
tax_payable = [Tax_payable_2013, Tax_payable_2014, Tax_payable_2015, Tax_payable_2016, Tax_payable_2017, Tax_payable_2018, Tax_payable_2019]
ato = pd.DataFrame(years, columns = ['years'])
ato['tax_payable'] = tax_payable
ato

"""**b.** Turn your result from (a) into a new dataframe. Calculate the percentage change in total tax collected from year to year for each year in our sample and save the calculation as a new column in your new dataframe."""

percent_change_14 = (Tax_payable_2014 - Tax_payable_2013)/ Tax_payable_2013 *100
percent_change_15 = (Tax_payable_2015 - Tax_payable_2014)/ Tax_payable_2014 *100
percent_change_16 = (Tax_payable_2016 - Tax_payable_2015)/ Tax_payable_2015 *100
percent_change_17 = (Tax_payable_2017 - Tax_payable_2016)/ Tax_payable_2016 *100
percent_change_18 = (Tax_payable_2018 - Tax_payable_2017)/ Tax_payable_2017 *100
percent_change_19 = (Tax_payable_2019 - Tax_payable_2018)/ Tax_payable_2018 *100

percent_change = [0, percent_change_14, percent_change_15, percent_change_16, percent_change_17, percent_change_18, percent_change_19]
ato['percent_change'] = percent_change
ato

"""**c.**	It is possible that any change documented above is related to a general change in the economy. To provide some evidence, calculate the Total income (revenue) reported by our sample firms in each year and add it as a column to the dataframe you created in (b) above."""

Total_income_2013 = final.loc[final['Income Year'] == 2013, 'Total income'].sum()
Total_income_2014 = final.loc[final['Income Year'] == 2014, 'Total income'].sum()
Total_income_2015 = final.loc[final['Income Year'] == 2015, 'Total income'].sum()
Total_income_2016 = final.loc[final['Income Year'] == 2016, 'Total income'].sum()
Total_income_2017 = final.loc[final['Income Year'] == 2017, 'Total income'].sum()
Total_income_2018 = final.loc[final['Income Year'] == 2018, 'Total income'].sum()
Total_income_2019 = final.loc[final['Income Year'] == 2019, 'Total income'].sum()

Total_income = [Total_income_2013, Total_income_2014, Total_income_2015, Total_income_2016, Total_income_2017, Total_income_2018, Total_income_2019]
ato['Total_income'] = Total_income
ato

"""There is indeed a direct relationship between Total Income and Tax Payable. The correlation is evident, as the amount of the total income has the same tendency as that of the tax payable, which can be attributed to overall changes in the economy.

**d.** Calculate the percentage of total income reported in each year that is paid to the ATO in each year. Add your result to the dataframe created in (b) above.
"""

Tax_payable_2013 = final.loc[final['Income Year'] == 2013, 'Tax payable'].sum()
Tax_payable_2014 = final.loc[final['Income Year'] == 2014, 'Tax payable'].sum()
Tax_payable_2015 = final.loc[final['Income Year'] == 2015, 'Tax payable'].sum()
Tax_payable_2016 = final.loc[final['Income Year'] == 2016, 'Tax payable'].sum()
Tax_payable_2017 = final.loc[final['Income Year'] == 2017, 'Tax payable'].sum()
Tax_payable_2018 = final.loc[final['Income Year'] == 2018, 'Tax payable'].sum()
Tax_payable_2019 = final.loc[final['Income Year'] == 2019, 'Tax payable'].sum()

percent_tax_payable_2013 = (Tax_payable_2013/Total_income_2013)*100
percent_tax_payable_2014 = (Tax_payable_2014/Total_income_2014)*100
percent_tax_payable_2015 = (Tax_payable_2015/Total_income_2015)*100
percent_tax_payable_2016 = (Tax_payable_2016/Total_income_2016)*100
percent_tax_payable_2017 = (Tax_payable_2017/Total_income_2017)*100
percent_tax_payable_2018 = (Tax_payable_2018/Total_income_2018)*100
percent_tax_payable_2019 = (Tax_payable_2013/Total_income_2019)*100

percent_tax_payable = [percent_tax_payable_2013,percent_tax_payable_2014,percent_tax_payable_2015,percent_tax_payable_2016,percent_tax_payable_2017,percent_tax_payable_2018,percent_tax_payable_2019]
ato['percent_tax_payable'] = percent_tax_payable
ato

"""**e.** Lastly, calculate the percentage change from year to year for the variable you calculated in (d). Add your result to the same dataframe."""

percent_change_tax_payable_14 = ((percent_tax_payable_2014 - percent_tax_payable_2013)/percent_tax_payable_2013) *100
percent_change_tax_payable_15 = ((percent_tax_payable_2015 - percent_tax_payable_2014)/percent_tax_payable_2014) *100
percent_change_tax_payable_16 = ((percent_tax_payable_2016 - percent_tax_payable_2015)/percent_tax_payable_2015) *100
percent_change_tax_payable_17 = ((percent_tax_payable_2017 - percent_tax_payable_2016)/percent_tax_payable_2016) *100
percent_change_tax_payable_18 = ((percent_tax_payable_2018 - percent_tax_payable_2017)/percent_tax_payable_2017) *100
percent_change_tax_payable_19 = ((percent_tax_payable_2019 - percent_tax_payable_2018)/percent_tax_payable_2018) *100

percent_change_tax_payable = [0,percent_change_tax_payable_14, percent_change_tax_payable_15, percent_change_tax_payable_16, percent_change_tax_payable_17, percent_change_tax_payable_18, percent_change_tax_payable_19]
ato['Percent_change_tax_payable'] = percent_change_tax_payable
ato

"""**f.** Interpret your results. Specifically:

- Describe the pattern you notice
- Relate it back to the law change and what the legislators wanted to happen
- Did the law work, explain

<div style="color:black;
           display:fill;
           border-radius:5px;
           background-color:#ABBAEA;>

            
<p style="padding: 10px;
              color:white;">
                           
**#1 Analysis:**
The Australian Government passed a policy in December 2015 to promote transparency and therefore increase the tax collection. The percent change of tax payable in the 2015-2016 period increased by 20.18%, substantially higher than the 10.57% increase in Total Income. Therefore, even though the companies reported an increase in total income -hinting an economic boom- there is still a higher increase of the taxes that were collected. In addition, after 2015, there was a steady increase in the percentage of tax payable to total income ratio, highlighting the efficiency of the policy.

## Calculate your Results - #2

**a.**	For *each* firm in each year, calculate the following:
- Taxes Paid as a Percentage of Taxable Income
- Taxes Paid as a Percentage of Total Income
- Percentage change in Taxable income from year to year
- Percentage change in Total income from year to year
- Percentage change in Tax payable from year to year
- Absolute change in first effective tax rate calculated (tax paid/taxable income) from year to year
- Absolute change in second effective tax rate calculated (tax paid/total income) from year to year
"""

#Taxes Paid as a Percentage of Taxable Income
final['Taxes as % of Taxable Income'] = final['Tax payable']/final['Taxable income'] *100
final['Taxes as % of Taxable Income']

#Taxes Paid as a Percentage of Total Income
final['Taxes as % of Total Income'] = final['Tax payable']/final['Total income'] *100
final['Taxes as % of Total Income']

#Percentage change in Taxable income from year to year
final['% change in taxable income']=final['Taxable income'].pct_change() * 100
final.loc[final['Income Year'] == 2013, '% change in taxable income'] = np.nan
final.head()

#Percentage change in Total income from year to year
final['% change in total income']=final['Total income'].pct_change() * 100
final.loc[final['Income Year'] == 2013, '% change in taxable income'] = np.nan
final.head()

#Percentage change in Tax payable from year to year
final['% change in tax payable']=final['Tax payable'].pct_change() * 100
final.loc[final['Income Year'] == 2013, '% change in taxable income'] = np.nan
final.head()

#Absolute change in first effective tax rate calculated (tax paid/taxable income) from year to year

final['ETR'] = final['Tax payable']/final['Taxable income']
final['ETR Change'] = final['ETR'].diff()

final

#Absolute change in second effective tax rate calculated (tax paid/total income) from year to year

final['ETR2'] = final['Tax payable']/final['Total income']
final['ETR2 Change'] = final['ETR2'].diff()

final

"""**b.** Years with zero Taxable income and/or zero Tax payable make it difficult to calculate a percentage change as we cannot divide by zero.
   - If a firm had a Taxable income of 0 and now has a positive Taxable income, python will report a percentage change of infinity, 'inf'. The infinity values prevent python from calculating any summary statistics such as an average or a standard deviation. Create a new column that converts any infinity values into missing values. 
      - You can specify infinity with ```float('inf')```
   - If a firm has a positive Taxable income and now has a Taxable income of 0, we can calculate a percentage change without an issue.
   - If a firm had no Taxable income in either year, python will report a missing percentage change value. This value should really be a percentage change of zero as Taxable income has not changed. In your new column that does not have infinity values also fix the percentage change calculations for firms with no Taxable income in either year.
   - You will need to make all of the same adjustments for Tax payable.

"""

final.loc[final['% change in taxable income'] == float('inf'), '% change in taxable income'] = np.nan
final.loc[final['Taxable income'] == 0, '% change in taxable income'] = 0
final

final.loc[final['% change in tax payable'] == float('inf'), '% change in tax payable'] = np.nan
final.loc[final['Tax payable'] == 0, '% change in tax payable'] = 0
final

"""**c.** Describe the distributions of the change in effective tax rates and the percentage change in Taxable income, Total income, and Tax payable (i.e. calculate the mean, median, min, max) separately for public and private firms in each year. You may want to transpose the data to make it easier to read."""

#Year 2013

pip install tabulate
from tabulate import tabulate

#Statistics for Public Industry, Percent Change in Taxable Income, 2015
final_public = final.loc[final['Public/Private'] == 'public']
final_public['% change in taxable income'].dropna()
S2015PublicTaxInc = final_public[final_public['Income Year']==2015]['% change in taxable income'].describe()
S2015PublicTaxInc

#Statistics for Public Industry, Percent Change in Taxable Income, 2016
final_public = final.loc[final['Public/Private'] == 'public']
final_public['% change in taxable income'].dropna()
S2016PublicTaxInc = final_public[final_public['Income Year']==2016]['% change in taxable income'].describe()
S2016PublicTaxInc

#Statistics for Public Industry, Percent Change in Taxable Income, 2017
final_public = final.loc[final['Public/Private'] == 'public']
final_public['% change in taxable income'].dropna()
S2017PublicTaxInc = final_public[final_public['Income Year']==2017]['% change in taxable income'].describe()
S2017PublicTaxInc

#Statistics for Public Industry, Percent Change in Taxable Income, 2018
final_public = final.loc[final['Public/Private'] == 'public']
final_public['% change in taxable income'].dropna()
S2018PublicTaxInc = final_public[final_public['Income Year']==2018]['% change in taxable income'].describe()
S2018PublicTaxInc

#Statistics for Public Industry, Percent Change in Taxable Income, 2019
final_public = final.loc[final['Public/Private'] == 'public']
final_public['% change in taxable income'].dropna()
S2019PublicTaxInc = final_public[final_public['Income Year']==2019]['% change in taxable income'].describe()
S2019PublicTaxInc



"""**d.**  What percentage of public and private firms reported increases in total income, taxable income and taxes paid in each year (not all three, each separately)? Present your results in a labeled and easy to read table (a DataFrame makes for a nice table).

Note- infinity values will not affect these calculations.
"""

#Public - Total Income
final_public = final.loc[final['Public/Private'] == 'public']

pub_totinc = []
pub_totinc_2014 = final_public.loc[final_public['Income Year'] == 2014]
firms_totinc_2014 = len(pub_totinc_2014[pub_totinc_2014['% change in total income'] > 0])/len(pub_totinc_2014['% change in total income']) * 100
firms_totinc_2014
pub_totinc.append(firms_totinc_2014)

pub_totinc_2015 = final_public.loc[final_public['Income Year'] == 2015]
firms_totinc_2015 = len(pub_totinc_2015[pub_totinc_2015['% change in total income'] > 0])/len(pub_totinc_2015['% change in total income']) * 100
firms_totinc_2015
pub_totinc.append(firms_totinc_2015)

pub_totinc_2016 = final_public.loc[final_public['Income Year'] == 2016]
firms_totinc_2016 = len(pub_totinc_2016[pub_totinc_2016['% change in total income'] > 0])/len(pub_totinc_2016['% change in total income']) * 100
firms_totinc_2016
pub_totinc.append(firms_totinc_2016)

pub_totinc_2017 = final_public.loc[final_public['Income Year'] == 2017]
firms_totinc_2017 = len(pub_totinc_2017[pub_totinc_2017['% change in total income'] > 0])/len(pub_totinc_2017['% change in total income']) * 100
firms_totinc_2017
pub_totinc.append(firms_totinc_2017)

pub_totinc_2018 = final_public.loc[final_public['Income Year'] == 2018]
firms_totinc_2018 = len(pub_totinc_2018[pub_totinc_2018['% change in total income'] > 0])/len(pub_totinc_2018['% change in total income']) * 100
firms_totinc_2018
pub_totinc.append(firms_totinc_2018)

pub_totinc_2019 = final_public.loc[final_public['Income Year'] == 2019]
firms_totinc_2019 = len(pub_totinc_2019[pub_totinc_2019['% change in total income'] > 0])/len(pub_totinc_2019['% change in total income']) * 100
firms_totinc_2019
pub_totinc.append(firms_totinc_2019)

pub_totinc

#Private - Total Income
final_private = final.loc[final['Public/Private'] == 'private']

priv_totinc = []
priv_totinc_2014 = final_private.loc[final_private['Income Year'] == 2014]
priv_totinc_2014 = len(priv_totinc_2014[priv_totinc_2014['% change in total income'] > 0])/len(priv_totinc_2014['% change in total income']) * 100
priv_totinc_2014
priv_totinc.append(priv_totinc_2014)

priv_totinc_2015 = final_private.loc[final_private['Income Year'] == 2015]
priv_totinc_2015 = len(priv_totinc_2015[priv_totinc_2015['% change in total income'] > 0])/len(priv_totinc_2015['% change in total income']) * 100
priv_totinc_2015
priv_totinc.append(priv_totinc_2015)

priv_totinc_2016 = final_private.loc[final_private['Income Year'] == 2016]
priv_totinc_2016 = len(priv_totinc_2016[priv_totinc_2016['% change in total income'] > 0])/len(priv_totinc_2016['% change in total income']) * 100
priv_totinc_2016
priv_totinc.append(priv_totinc_2016)

priv_totinc_2017 = final_private.loc[final_private['Income Year'] == 2017]
priv_totinc_2017 = len(priv_totinc_2017[priv_totinc_2017['% change in total income'] > 0])/len(priv_totinc_2017['% change in total income']) * 100
priv_totinc_2017
priv_totinc.append(priv_totinc_2017)

priv_totinc_2018 = final_private.loc[final_private['Income Year'] == 2018]
priv_totinc_2018 = len(priv_totinc_2018[priv_totinc_2018['% change in total income'] > 0])/len(priv_totinc_2018['% change in total income']) * 100
priv_totinc_2018
priv_totinc.append(priv_totinc_2018)

priv_totinc_2019 = final_private.loc[final_private['Income Year'] == 2019]
priv_totinc_2019 = len(priv_totinc_2019[priv_totinc_2019['% change in total income'] > 0])/len(priv_totinc_2019['% change in total income']) * 100
priv_totinc_2019
priv_totinc.append(priv_totinc_2019)

priv_totinc

#Public - Taxable Income

pub_taxinc = []
pub_taxinc_2014 = final_public.loc[final_public['Income Year'] == 2014]
firms_taxinc_2014 = len(pub_taxinc_2014[pub_taxinc_2014['% change in taxable income'] > 0])/len(pub_taxinc_2014['% change in taxable income']) * 100
firms_taxinc_2014
pub_taxinc.append(firms_taxinc_2014)

pub_taxinc_2015 = final_public.loc[final_public['Income Year'] == 2015]
firms_taxinc_2015 = len(pub_taxinc_2015[pub_taxinc_2015['% change in taxable income'] > 0])/len(pub_taxinc_2015['% change in taxable income']) * 100
firms_taxinc_2015
pub_taxinc.append(firms_taxinc_2015)

pub_taxinc_2015 = final_public.loc[final_public['Income Year'] == 2015]
firms_taxinc_2015 = len(pub_taxinc_2015[pub_taxinc_2015['% change in taxable income'] > 0])/len(pub_taxinc_2015['% change in taxable income']) * 100
firms_taxinc_2015
pub_taxinc.append(firms_taxinc_2015)

pub_taxinc_2016 = final_public.loc[final_public['Income Year'] == 2016]
firms_taxinc_2016 = len(pub_taxinc_2016[pub_taxinc_2016['% change in taxable income'] > 0])/len(pub_taxinc_2016['% change in taxable income']) * 100
firms_taxinc_2016
pub_taxinc.append(firms_taxinc_2016)

pub_taxinc_2017 = final_public.loc[final_public['Income Year'] == 2017]
firms_taxinc_2017 = len(pub_taxinc_2017[pub_taxinc_2017['% change in taxable income'] > 0])/len(pub_taxinc_2017['% change in taxable income']) * 100
firms_taxinc_2017
pub_taxinc.append(firms_taxinc_2017)

pub_taxinc_2018 = final_public.loc[final_public['Income Year'] == 2018]
firms_taxinc_2018 = len(pub_taxinc_2018[pub_taxinc_2018['% change in taxable income'] > 0])/len(pub_taxinc_2018['% change in taxable income']) * 100
firms_taxinc_2018
pub_taxinc.append(firms_taxinc_2018)

pub_taxinc_2019 = final_public.loc[final_public['Income Year'] == 2019]
firms_taxinc_2019 = len(pub_taxinc_2019[pub_taxinc_2019['% change in taxable income'] > 0])/len(pub_taxinc_2019['% change in taxable income']) * 100
firms_taxinc_2019
pub_taxinc.append(firms_taxinc_2019)

pub_taxinc

#Private - Taxable Income

final_private = final.loc[final['Public/Private'] == 'private']

priv_taxinc = []
priv_taxinc_2014 = final_private.loc[final_private['Income Year'] == 2014]
priv_taxinc_2014 = len(priv_taxinc_2014[priv_taxinc_2014['% change in taxable income'] > 0])/len(priv_taxinc_2014['% change in taxable income']) * 100
priv_taxinc_2014
priv_taxinc.append(priv_taxinc_2014)

priv_taxinc_2015 = final_private.loc[final_private['Income Year'] == 2015]
priv_taxinc_2015 = len(priv_taxinc_2015[priv_taxinc_2015['% change in taxable income'] > 0])/len(priv_taxinc_2015['% change in taxable income']) * 100
priv_taxinc_2015
priv_taxinc.append(priv_taxinc_2015)

priv_taxinc_2016 = final_private.loc[final_private['Income Year'] == 2016]
priv_taxinc_2016 = len(priv_taxinc_2016[priv_taxinc_2016['% change in taxable income'] > 0])/len(priv_taxinc_2016['% change in taxable income']) * 100
priv_taxinc_2016
priv_taxinc.append(priv_taxinc_2016)

priv_taxinc_2017 = final_private.loc[final_private['Income Year'] == 2017]
priv_taxinc_2017 = len(priv_taxinc_2017[priv_taxinc_2017['% change in taxable income'] > 0])/len(priv_taxinc_2017['% change in taxable income']) * 100
priv_taxinc_2017
priv_taxinc.append(priv_taxinc_2017)

priv_taxinc_2018 = final_private.loc[final_private['Income Year'] == 2018]
priv_taxinc_2018 = len(priv_taxinc_2018[priv_taxinc_2018['% change in taxable income'] > 0])/len(priv_taxinc_2018['% change in taxable income']) * 100
priv_taxinc_2018
priv_taxinc.append(priv_taxinc_2018)

priv_taxinc_2019 = final_private.loc[final_private['Income Year'] == 2019]
priv_taxinc_2019 = len(priv_taxinc_2019[priv_taxinc_2019['% change in taxable income'] > 0])/len(priv_taxinc_2019['% change in taxable income']) * 100
priv_taxinc_2019
priv_taxinc.append(priv_taxinc_2019)

priv_taxinc

#Public - Tax Payable

pub_taxpay = []
pub_taxpay_2014 = final_public.loc[final_public['Income Year'] == 2014]
pub_taxpay_2014 = len(pub_taxpay_2014[pub_taxpay_2014['% change in tax payable'] > 0])/len(pub_taxpay_2014['% change in tax payable']) * 100
pub_taxpay_2014
pub_taxpay.append(pub_taxpay_2014)

pub_taxpay_2015 = final_public.loc[final_public['Income Year'] == 2015]
pub_taxpay_2015 = len(pub_taxpay_2015[pub_taxpay_2015['% change in tax payable'] > 0])/len(pub_taxpay_2015['% change in tax payable']) * 100
pub_taxpay_2015
pub_taxpay.append(pub_taxpay_2015)

pub_taxpay_2016 = final_public.loc[final_public['Income Year'] == 2016]
pub_taxpay_2016 = len(pub_taxpay_2016[pub_taxpay_2016['% change in tax payable'] > 0])/len(pub_taxpay_2016['% change in tax payable']) * 100
pub_taxpay_2016
pub_taxpay.append(pub_taxpay_2016)

pub_taxpay_2017 = final_public.loc[final_public['Income Year'] == 2017]
pub_taxpay_2017 = len(pub_taxpay_2017[pub_taxpay_2017['% change in tax payable'] > 0])/len(pub_taxpay_2017['% change in tax payable']) * 100
pub_taxpay_2017
pub_taxpay.append(pub_taxpay_2017)

pub_taxpay_2018 = final_public.loc[final_public['Income Year'] == 2018]
pub_taxpay_2018 = len(pub_taxpay_2018[pub_taxpay_2018['% change in tax payable'] > 0])/len(pub_taxpay_2018['% change in tax payable']) * 100
pub_taxpay_2018
pub_taxpay.append(pub_taxpay_2018)

pub_taxpay_2019 = final_public.loc[final_public['Income Year'] == 2019]
pub_taxpay_2019 = len(pub_taxpay_2019[pub_taxpay_2019['% change in tax payable'] > 0])/len(pub_taxpay_2019['% change in tax payable']) * 100
pub_taxpay_2019
pub_taxpay.append(pub_taxpay_2019)

pub_taxpay

#Private - Tax Payable

priv_taxpay = []
priv_taxpay_2014 = final_private.loc[final_private['Income Year'] == 2014]
priv_taxpay_2014 = len(priv_taxpay_2014[priv_taxpay_2014['% change in tax payable'] > 0])/len(priv_taxpay_2014['% change in tax payable']) * 100
priv_taxpay_2014
priv_taxpay.append(priv_taxpay_2014)

priv_taxpay_2015 = final_private.loc[final_private['Income Year'] == 2015]
priv_taxpay_2015 = len(priv_taxpay_2015[priv_taxpay_2015['% change in tax payable'] > 0])/len(priv_taxpay_2015['% change in tax payable']) * 100
priv_taxpay_2015
priv_taxpay.append(priv_taxpay_2015)

priv_taxpay_2016 = final_private.loc[final_private['Income Year'] == 2016]
priv_taxpay_2016 = len(priv_taxpay_2016[priv_taxpay_2016['% change in tax payable'] > 0])/len(priv_taxpay_2016['% change in tax payable']) * 100
priv_taxpay_2016
priv_taxpay.append(priv_taxpay_2016)

priv_taxpay_2017 = final_private.loc[final_private['Income Year'] == 2017]
priv_taxpay_2017 = len(priv_taxpay_2017[priv_taxpay_2017['% change in tax payable'] > 0])/len(priv_taxpay_2017['% change in tax payable']) * 100
priv_taxpay_2017
priv_taxpay.append(priv_taxpay_2017)

priv_taxpay_2018 = final_private.loc[final_private['Income Year'] == 2018]
priv_taxpay_2018 = len(priv_taxpay_2018[priv_taxpay_2018['% change in tax payable'] > 0])/len(priv_taxpay_2018['% change in tax payable']) * 100
priv_taxpay_2018
priv_taxpay.append(priv_taxpay_2018)

priv_taxpay_2019 = final_private.loc[final_private['Income Year'] == 2019]
priv_taxpay_2019 = len(priv_taxpay_2019[priv_taxpay_2019['% change in tax payable'] > 0])/len(priv_taxpay_2019['% change in tax payable']) * 100
priv_taxpay_2019
priv_taxpay.append(priv_taxpay_2019)

priv_taxpay

years = [2014, 2015, 2016, 2017, 2018, 2019]
TotincPub = [60.1904761904762, 58.76068376068376, 41.833333333333336,51.493848857644984, 50.950570342205324, 37.13163064833006]
TaxincPub = [48.952380952380956, 46.794871794871796, 46.794871794871796, 48.604651162790695, 52.81173594132029, 45.40682414698163, 37.735849056603776]
TaxpayPub = [47.61904761904761, 44.871794871794876, 44.18604651162791, 52.81173594132029, 42.51968503937008,37.46630727762803]

per_change_public = pd.DataFrame(list(zip(years, TotincPub, TaxincPub, TaxpayPub)),
               columns =['Years/Public', '% Positive Total Income', '% Positive Tax Income', '% Positive Tax Payable'])
per_change_public

years = [2014, 2015, 2016, 2017, 2018, 2019]
TotincPriv = [65.06550218340611, 65.96858638743456, 61.1764705882353, 70.625, 64.82758620689654,55.79710144927537]
TaxincPriv = [46.724890829694324, 37.696335078534034, 44.70588235294118, 41.25, 32.41379310344827, 40.57971014492754]
TaxpayPriv = [44.10480349344978, 38.7434554973822, 43.529411764705884, 41.875, 28.27586206896552, 40.57971014492754]

per_change_private = pd.DataFrame(list(zip(years, TotincPriv, TaxincPriv, TaxpayPriv)),
               columns =['Years/Private', '% Positive Total Income', '% Positive Tax Income', '% Positive Tax Payable'])
per_change_private

"""**e.** Which firm had the largest percentage increase in Total income? Did the firm have a proportionate increase in Taxable income and Taxes Paid?"""

final1 = final
final1.drop(final1[final1['Income Year'] == 2013].index, inplace = True)
final1.sort_values('% change in total income', ascending=False)

"""**f.** Discuss your results from all of the calculations related to #2 including a written discussion regarding your answers to e. What do you conclude in terms of the effect of the new law based on these results?

2a).It is meant to analyze each individual firm, and therefore it would be difficult to analyze a macro trend, however, based on samples, we understood that there was a downard trend -in private firms- of its tax payable, up until the new legislation was passed, for which an upward trend was experienced.

2b). Mostly formatting for computations - no analysis made

2c). This section gave us the most insights onto the trends, and how it distinguishes between private and public.

2d) This section gave us the most insights onto the trends, and how it distinguishes between private and public. Private firms yielded a higher percentage of companies that had positive percent changes in total income. However, in terms of positive percent change taxable income and income paid, both fillings had a similar ratio, and fluctuated over the years. 

2e).The company with highest percent increase in total income was The Hong Kong and Shanghai Banking Corporation, with a staggering 669.81%. However, its % change in taxable income and tax payable decrease significantly. I believe this company underwent an incredible expansion, for which it might've also incurred in costs that were likely deductible. I believe it might also be an indicator that with the law in place, there could be a negative correlation between % change in total income and % change in taxes payable.

<div style="color:black;
           display:fill;
           border-radius:5px;
           background-color:#ABBAEA;>

            
<p style="padding: 10px;
              color:white;">
                           
**#2 Analysis:**
                          
It is difficult to analyze a macro trend, however, there was a downard trend -in private firms- of its tax payable, up until the new legislation was passed, for which an upward trend was experienced.
Private firms yielded a higher percentage of companies that had positive percent changes in total income. However, in terms of positive percent change taxable income and income paid, both fillings had a similar ratio, and fluctuated over the years. 

The company with highest percent increase in total income was The Hong Kong and Shanghai Banking Corporation, with a staggering 669.81%. However, its % change in taxable income and tax payable decrease significantly. I believe this company underwent an incredible expansion or an indicator that with the law in place, there could be a negative correlation between % change in total income and % change in taxes payable.

## Calculate your Results - #3

**a.**	Calculate the percentage of firms that report no tax liability in each year. Further bifurcate the calculations based on each firm’s filing status (public or private).


**b.**	Calculate the percentage of firms that report no Taxable income in each year. Further bifurcate the calculations based on each firm’s filing status (public or private).

**c.** Calculate the percentage of firms that pay the full statutory tax rate, 30% in each year (define 30% as equal to or above 29.99%). Further bifurcate the calculations based on each firm's filing status.
"""

no_tax = []
final_2013 = final.loc[final['Income Year'] == 2013]
firms_no_tax_2013 = len(final_2013[final_2013['Tax payable'] == 0])/len(final_2013['Tax payable']) * 100
firms_no_tax_2013
no_tax.append(firms_no_tax_2013)

final_2014 = final.loc[final['Income Year'] == 2014]
firms_no_tax_2014 = len(final_2014[final_2014['Tax payable'] == 0])/len(final_2014['Tax payable']) * 100
firms_no_tax_2014
no_tax.append(firms_no_tax_2014)

final_2015 = final.loc[final['Income Year'] == 2015]
firms_no_tax_2015 = len(final_2015[final_2015['Tax payable'] == 0])/len(final_2015['Tax payable']) * 100
firms_no_tax_2015
no_tax.append(firms_no_tax_2015)


final_2016 = final.loc[final['Income Year'] == 2016]
firms_no_tax_2016 = len(final_2016[final_2016['Tax payable'] == 0])/len(final_2016['Tax payable']) * 100
firms_no_tax_2016
no_tax.append(firms_no_tax_2016)

final_2017 = final.loc[final['Income Year'] == 2017]
firms_no_tax_2017 = len(final_2017[final_2017['Tax payable'] == 0])/len(final_2017['Tax payable']) * 100
firms_no_tax_2017
no_tax.append(firms_no_tax_2017)

final_2018 = final.loc[final['Income Year'] == 2018]
firms_no_tax_2018 = len(final_2018[final_2018['Tax payable'] == 0])/len(final_2018['Tax payable']) * 100
firms_no_tax_2018
no_tax.append(firms_no_tax_2018)

final_2019 = final.loc[final['Income Year'] == 2019]
firms_no_tax_2019 = len(final_2019[final_2019['Tax payable'] == 0])/len(final_2019['Tax payable']) * 100
firms_no_tax_2019
no_tax.append(firms_no_tax_2019)

no_tax

no_tax_public = []
final_2013 = final_public.loc[final_public['Income Year'] == 2013]
firms_no_tax_2013 = len(final_2013[final_2013['Tax payable'] == 0])/len(final_2013['Tax payable']) * 100
firms_no_tax_2013
no_tax_public.append(firms_no_tax_2013)

final_2014 = final_public.loc[final_public['Income Year'] == 2014]
firms_no_tax_2014 = len(final_2014[final_2014['Tax payable'] == 0])/len(final_2014['Tax payable']) * 100
firms_no_tax_2014
no_tax_public.append(firms_no_tax_2014)

final_2015 = final_public.loc[final_public['Income Year'] == 2015]
firms_no_tax_2015 = len(final_2015[final_2015['Tax payable'] == 0])/len(final_2015['Tax payable']) * 100
firms_no_tax_2015
no_tax_public.append(firms_no_tax_2015)


final_2016 = final_public.loc[final_public['Income Year'] == 2016]
firms_no_tax_2016 = len(final_2016[final_2016['Tax payable'] == 0])/len(final_2016['Tax payable']) * 100
firms_no_tax_2016
no_tax_public.append(firms_no_tax_2016)

final_2017 = final_public.loc[final_public['Income Year'] == 2017]
firms_no_tax_2017 = len(final_2017[final_2017['Tax payable'] == 0])/len(final_2017['Tax payable']) * 100
firms_no_tax_2017
no_tax_public.append(firms_no_tax_2017)

final_2018 = final_public.loc[final_public['Income Year'] == 2018]
firms_no_tax_2018 = len(final_2018[final_2018['Tax payable'] == 0])/len(final_2018['Tax payable']) * 100
firms_no_tax_2018
no_tax_public.append(firms_no_tax_2018)

final_2019 = final_public.loc[final_public['Income Year'] == 2019]
firms_no_tax_2019 = len(final_2019[final_2019['Tax payable'] == 0])/len(final_2019['Tax payable']) * 100
firms_no_tax_2019
no_tax_public.append(firms_no_tax_2019)

no_tax_public

no_tax_private = []
final_2013 = final_private.loc[final_private['Income Year'] == 2013]
firms_no_tax_2013 = len(final_2013[final_2013['Tax payable'] == 0])/len(final_2013['Tax payable']) * 100
firms_no_tax_2013
no_tax_private.append(firms_no_tax_2013)

final_2014 = final_private.loc[final_private['Income Year'] == 2014]
firms_no_tax_2014 = len(final_2014[final_2014['Tax payable'] == 0])/len(final_2014['Tax payable']) * 100
firms_no_tax_2014
no_tax_private.append(firms_no_tax_2014)

final_2015 = final_private.loc[final_private['Income Year'] == 2015]
firms_no_tax_2015 = len(final_2015[final_2015['Tax payable'] == 0])/len(final_2015['Tax payable']) * 100
firms_no_tax_2015
no_tax_private.append(firms_no_tax_2015)


final_2016 = final_private.loc[final_private['Income Year'] == 2016]
firms_no_tax_2016 = len(final_2016[final_2016['Tax payable'] == 0])/len(final_2016['Tax payable']) * 100
firms_no_tax_2016
no_tax_private.append(firms_no_tax_2016)

final_2017 = final_private.loc[final_private['Income Year'] == 2017]
firms_no_tax_2017 = len(final_2017[final_2017['Tax payable'] == 0])/len(final_2017['Tax payable']) * 100
firms_no_tax_2017
no_tax_private.append(firms_no_tax_2017)

final_2018 = final_private.loc[final_private['Income Year'] == 2018]
firms_no_tax_2018 = len(final_2018[final_2018['Tax payable'] == 0])/len(final_2018['Tax payable']) * 100
firms_no_tax_2018
no_tax_private.append(firms_no_tax_2018)

final_2019 = final_private.loc[final_private['Income Year'] == 2019]
firms_no_tax_2019 = len(final_2019[final_2019['Tax payable'] == 0])/len(final_2019['Tax payable']) * 100
firms_no_tax_2019
no_tax_private.append(firms_no_tax_2019)

no_tax_private

no_tax_inc = []
final_2013 = final.loc[final['Income Year'] == 2013]
firms_no_tax_inc_2013 = len(final_2013[final_2013['Taxable income'] == 0])/len(final_2013['Taxable income']) * 100
firms_no_tax_inc_2013
no_tax_inc.append(firms_no_tax_inc_2013)

final_2014 = final.loc[final['Income Year'] == 2014]
firms_no_tax_inc_2014 = len(final_2014[final_2014['Taxable income'] == 0])/len(final_2014['Taxable income']) * 100
firms_no_tax_inc_2014
no_tax_inc.append(firms_no_tax_inc_2014)

final_2015 = final.loc[final['Income Year'] == 2015]
firms_no_tax_inc_2015 = len(final_2015[final_2015['Taxable income'] == 0])/len(final_2015['Taxable income']) * 100
firms_no_tax_inc_2015
no_tax_inc.append(firms_no_tax_inc_2015)

final_2016 = final.loc[final['Income Year'] == 2016]
firms_no_tax_inc_2016 = len(final_2016[final_2016['Taxable income'] == 0])/len(final_2016['Taxable income']) * 100
firms_no_tax_inc_2016
no_tax_inc.append(firms_no_tax_inc_2016)

final_2017 = final.loc[final['Income Year'] == 2017]
firms_no_tax_inc_2017 = len(final_2017[final_2017['Taxable income'] == 0])/len(final_2017['Taxable income']) * 100
firms_no_tax_inc_2017
no_tax_inc.append(firms_no_tax_inc_2017)

final_2018 = final.loc[final['Income Year'] == 2018]
firms_no_tax_inc_2018 = len(final_2018[final_2018['Taxable income'] == 0])/len(final_2018['Taxable income']) * 100
firms_no_tax_inc_2018
no_tax_inc.append(firms_no_tax_inc_2018)

final_2019 = final.loc[final['Income Year'] == 2019]
firms_no_tax_inc_2019 = len(final_2019[final_2019['Taxable income'] == 0])/len(final_2019['Taxable income']) * 100
firms_no_tax_inc_2019
no_tax_inc.append(firms_no_tax_inc_2019)

no_tax_inc

no_tax_public_inc = []
final_2013 = final_public.loc[final_public['Income Year'] == 2013]
firms_no_tax_inc_2013 = len(final_2013[final_2013['Taxable income'] == 0])/len(final_2013['Taxable income']) * 100
firms_no_tax_inc_2013
no_tax_public_inc.append(firms_no_tax_inc_2013)

final_2014 = final_public.loc[final_public['Income Year'] == 2014]
firms_no_tax_inc_2014 = len(final_2014[final_2014['Taxable income'] == 0])/len(final_2014['Taxable income']) * 100
firms_no_tax_inc_2014
no_tax_public_inc.append(firms_no_tax_inc_2014)

final_2015 = final_public.loc[final_public['Income Year'] == 2015]
firms_no_tax_inc_2015 = len(final_2015[final_2015['Taxable income'] == 0])/len(final_2015['Taxable income']) * 100
firms_no_tax_inc_2015
no_tax_public_inc.append(firms_no_tax_inc_2015)

final_2016 = final_public.loc[final_public['Income Year'] == 2016]
firms_no_tax_inc_2016 = len(final_2016[final_2016['Taxable income'] == 0])/len(final_2016['Taxable income']) * 100
firms_no_tax_inc_2016
no_tax_public_inc.append(firms_no_tax_inc_2016)

final_2017 = final_public.loc[final_public['Income Year'] == 2017]
firms_no_tax_inc_2017 = len(final_2017[final_2017['Taxable income'] == 0])/len(final_2017['Taxable income']) * 100
firms_no_tax_inc_2017
no_tax_public_inc.append(firms_no_tax_inc_2017)

final_2018 = final_public.loc[final_public['Income Year'] == 2018]
firms_no_tax_inc_2018 = len(final_2018[final_2018['Taxable income'] == 0])/len(final_2018['Taxable income']) * 100
firms_no_tax_inc_2018
no_tax_public_inc.append(firms_no_tax_inc_2018)

final_2019 = final_public.loc[final_public['Income Year'] == 2019]
firms_no_tax_inc_2019 = len(final_2019[final_2019['Taxable income'] == 0])/len(final_2019['Taxable income']) * 100
firms_no_tax_inc_2019

no_tax_public_inc.append(firms_no_tax_inc_2019)

no_tax_public_inc

no_tax_private_inc = []
final_2013 = final_private.loc[final_private['Income Year'] == 2013]
firms_no_tax_inc_2013 = len(final_2013[final_2013['Taxable income'] == 0])/len(final_2013['Taxable income']) * 100
firms_no_tax_inc_2013
no_tax_private_inc.append(firms_no_tax_inc_2013)

final_2014 = final_private.loc[final_private['Income Year'] == 2014]
firms_no_tax_inc_2014 = len(final_2014[final_2014['Taxable income'] == 0])/len(final_2014['Taxable income']) * 100
firms_no_tax_inc_2014
no_tax_private_inc.append(firms_no_tax_inc_2014)

final_2015 = final_private.loc[final_private['Income Year'] == 2015]
firms_no_tax_inc_2015 = len(final_2015[final_2015['Taxable income'] == 0])/len(final_2015['Taxable income']) * 100
firms_no_tax_inc_2015
no_tax_private_inc.append(firms_no_tax_inc_2015)

final_2016 = final_private.loc[final_private['Income Year'] == 2016]
firms_no_tax_inc_2016 = len(final_2016[final_2016['Taxable income'] == 0])/len(final_2016['Taxable income']) * 100
firms_no_tax_inc_2016
no_tax_private_inc.append(firms_no_tax_inc_2016)

final_2017 = final_private.loc[final_private['Income Year'] == 2017]
firms_no_tax_inc_2017 = len(final_2017[final_2017['Taxable income'] == 0])/len(final_2017['Taxable income']) * 100
firms_no_tax_inc_2017
no_tax_private_inc.append(firms_no_tax_inc_2017)

final_2018 = final_private.loc[final_private['Income Year'] == 2018]
firms_no_tax_inc_2018 = len(final_2018[final_2018['Taxable income'] == 0])/len(final_2018['Taxable income']) * 100
firms_no_tax_inc_2018
no_tax_private_inc.append(firms_no_tax_inc_2018)

final_2019 = final_private.loc[final_private['Income Year'] == 2019]
firms_no_tax_inc_2019 = len(final_2019[final_2019['Taxable income'] == 0])/len(final_2019['Taxable income']) * 100
firms_no_tax_inc_2019
no_tax_private_inc.append(firms_no_tax_inc_2019)

no_tax_private_inc

pay_tax = []
final_2013 = final.loc[final['Income Year'] == 2013]
firms_tax_2013 = len(final_2013[final_2013['Tax payable'] >= 30])/len(final_2013['Tax payable']) * 100
firms_tax_2013
pay_tax.append(firms_tax_2013)

final_2014 = final.loc[final['Income Year'] == 2014]
firms_tax_2014 = len(final_2014[final_2014['Tax payable'] >= 30])/len(final_2014['Tax payable']) * 100
firms_tax_2014
pay_tax.append(firms_tax_2014)

final_2015 = final.loc[final['Income Year'] == 2015]
firms_tax_2015 = len(final_2015[final_2015['Tax payable'] >= 30])/len(final_2015['Tax payable']) * 100
firms_tax_2015
pay_tax.append(firms_tax_2015)

final_2016 = final.loc[final['Income Year'] == 2016]
firms_tax_2016 = len(final_2016[final_2016['Tax payable'] >= 30])/len(final_2016['Tax payable']) * 100
firms_tax_2016
pay_tax.append(firms_tax_2016)

final_2017 = final.loc[final['Income Year'] == 2017]
firms_tax_2017 = len(final_2017[final_2017['Tax payable'] >= 30])/len(final_2017['Tax payable']) * 100
firms_tax_2017
pay_tax.append(firms_tax_2017)

final_2018 = final.loc[final['Income Year'] == 2018]
firms_tax_2018 = len(final_2018[final_2018['Tax payable'] >= 30])/len(final_2018['Tax payable']) * 100
firms_tax_2018
pay_tax.append(firms_tax_2018)

final_2019 = final.loc[final['Income Year'] == 2019]
firms_tax_2019 = len(final_2019[final_2019['Tax payable'] >= 30])/len(final_2019['Tax payable']) * 100
firms_tax_2019
pay_tax.append(firms_tax_2019)

pay_tax

pay_public_tax = []
final_2013 = final_public.loc[final_public['Income Year'] == 2013]
firms_tax_2013 = len(final_2013[final_2013['Tax payable'] >= 30])/len(final_2013['Tax payable']) * 100
firms_tax_2013
pay_public_tax.append(firms_tax_2013)

final_2014 = final_public.loc[final_public['Income Year'] == 2014]
firms_tax_2014 = len(final_2014[final_2014['Tax payable'] >= 30])/len(final_2014['Tax payable']) * 100
firms_tax_2014
pay_public_tax.append(firms_tax_2014)

final_2015 = final_public.loc[final_public['Income Year'] == 2015]
firms_tax_2015 = len(final_2015[final_2015['Tax payable'] >= 30])/len(final_2015['Tax payable']) * 100
firms_tax_2015
pay_public_tax.append(firms_tax_2015)

final_2016 = final_public.loc[final_public['Income Year'] == 2016]
firms_tax_2016 = len(final_2016[final_2016['Tax payable'] >= 30])/len(final_2016['Tax payable']) * 100
firms_tax_2016
pay_public_tax.append(firms_tax_2016)

final_2017 = final_public.loc[final_public['Income Year'] == 2017]
firms_tax_2017 = len(final_2017[final_2017['Tax payable'] >= 30])/len(final_2017['Tax payable']) * 100
firms_tax_2017
pay_public_tax.append(firms_tax_2017)

final_2018 = final_public.loc[final_public['Income Year'] == 2018]
firms_tax_2018 = len(final_2018[final_2018['Tax payable'] >= 30])/len(final_2018['Tax payable']) * 100
firms_tax_2018
pay_public_tax.append(firms_tax_2018)

final_2019 = final_public.loc[final_public['Income Year'] == 2019]
firms_tax_2019 = len(final_2019[final_2019['Tax payable'] >= 30])/len(final_2019['Tax payable']) * 100
firms_tax_2019
pay_public_tax.append(firms_tax_2019)

pay_public_tax

pay_private_tax = []
final_2013 = final_private.loc[final_private['Income Year'] == 2013]
firms_tax_2013 = len(final_2013[final_2013['Tax payable'] >= 30])/len(final_2013['Tax payable']) * 100
firms_tax_2013
pay_private_tax.append(firms_tax_2013)

final_2014 = final_private.loc[final_private['Income Year'] == 2014]
firms_tax_2014 = len(final_2014[final_2014['Tax payable'] >= 30])/len(final_2014['Tax payable']) * 100
firms_tax_2014
pay_private_tax.append(firms_tax_2014)

final_2015 = final_private.loc[final_private['Income Year'] == 2015]
firms_tax_2015 = len(final_2015[final_2015['Tax payable'] >= 30])/len(final_2015['Tax payable']) * 100
firms_tax_2015
pay_private_tax.append(firms_tax_2015)

final_2016 = final_private.loc[final_private['Income Year'] == 2016]
firms_tax_2016 = len(final_2016[final_2016['Tax payable'] >= 30])/len(final_2016['Tax payable']) * 100
firms_tax_2016
pay_private_tax.append(firms_tax_2016)

final_2017 = final_private.loc[final_private['Income Year'] == 2017]
firms_tax_2017 = len(final_2017[final_2017['Tax payable'] >= 30])/len(final_2017['Tax payable']) * 100
firms_tax_2017
pay_private_tax.append(firms_tax_2017)

final_2018 = final_private.loc[final_private['Income Year'] == 2018]
firms_tax_2018 = len(final_2018[final_2018['Tax payable'] >= 30])/len(final_2018['Tax payable']) * 100
firms_tax_2018
pay_private_tax.append(firms_tax_2018)

final_2019 = final_private.loc[final_private['Income Year'] == 2019]
firms_tax_2019 = len(final_2019[final_2019['Tax payable'] >= 30])/len(final_2019['Tax payable']) * 100
firms_tax_2019
pay_private_tax.append(firms_tax_2019)

pay_private_tax

"""**d.**	Plot the percentage of firms that report no taxable income, no tax payable and the full statutory tax rate in each year on three separate axes.

Denote public versus private firms with different colors.

I recommend a line plot with points at each data point. However you may present this using whatever visual and coding method you like best.
"""

import matplotlib.pyplot as plt

years = [2013, 2014, 2015, 2016, 2017, 2018, 2019]
plt.plot(years,no_tax,label = 'All Firms')
plt.plot(years,no_tax_public,label = 'Public Firms')
plt.plot(years,no_tax_private,label = 'Private Firms')
plt.title('Percentage of firms that report no tax liability ')
plt.legend()
plt.show()

years = [2013, 2014, 2015, 2016, 2017, 2018, 2019]
plt.plot(years,no_tax_inc,label = 'All Firms')
plt.plot(years,no_tax_public_inc,label = 'Public Firms')
plt.plot(years,no_tax_private_inc,label = 'Private Firms')
plt.title('Percentage of firms that report no Taxable income')
plt.legend()
plt.show()

years = [2013, 2014, 2015, 2016, 2017, 2018, 2019]
plt.plot(years,pay_tax,label = 'All Firms')
plt.plot(years,pay_public_tax,label = 'Public Firms')
plt.plot(years,pay_private_tax,label = 'Private Firms')
plt.title('Percentage of firms that pay the full statutory tax rate')
plt.legend()
plt.show()



"""**e.**	Form a conclusion related to the data calculated and displayed in this step. What do you notice?

a) Percentage of firms that report no tax liability: As it can be seen from the graph, there seems to be an opposite correlation between public and private companies. Since the policy was passed, there was a decrease in the number of private companies that reported no tax liability, possibly to avoid public scrutiny. On the other hand, the  opposite seems to happen to public companies. Since public companies typically have public (discolosed) financial documents, it must have been harder for them to manipulate income statements - but since now private companies would have to disclose there tax payments, that difference was bridged, and public companies didn't felt the direct additional pressure.
b) Percentage of firms that report no taxable income: Just as in point a), there is a direct negative correlation between public and private companies, due to the aforementioned reasons.

c) Percentage of firms that pay the full statutory tax rate: As previously mentioned, the regulation "evened out the field", for which it is expected that public and private firms would meet in the middle.

<div style="color:black;
           display:fill;
           border-radius:5px;
           background-color:#ABBAEA;>

            
<p style="padding: 10px;
              color:white;">
                           
**#3 Analysis:**

There seems to be an opposite correlation between public and private companies. Since the policy was passed, there was a decrease in the number of private companies that reported no tax liability, possibly to avoid public scrutiny. On the other hand, the  opposite seems to happen to public companies because they typically have public (discolosed) financial documents, it must have been harder for them to manipulate income statements 
Thus, there is a direct negative correlation between public and private companies, due to the aforementioned reasons and the regulation "evened out the field", for which it is expected that public and private firms would meet in the middle.

## Calculate your Results- #4

**a.** Calculate the average (both mean and median) effective tax rate in each year for each type of firm (public, private, large and small).
"""

Tax_payable_2013 = final.loc[final['Income Year'] == 2013, 'Tax payable']
Tax_payable_2014 = final.loc[final['Income Year'] == 2014, 'Tax payable']
Tax_payable_2015 = final.loc[final['Income Year'] == 2015, 'Tax payable']
Tax_payable_2016 = final.loc[final['Income Year'] == 2016, 'Tax payable']
Tax_payable_2017 = final.loc[final['Income Year'] == 2017, 'Tax payable']
Tax_payable_2018 = final.loc[final['Income Year'] == 2018, 'Tax payable']
Tax_payable_2019 = final.loc[final['Income Year'] == 2019, 'Tax payable']

# ETR Mean of public firm

#first find the final_public with tax payable and taxable income values
final_public = final.loc[final['Public/Private'] == 'Public']
final_public.dropna(subset=['Tax payable', 'Taxable income'], how='all')


#ETR = tax payable / taxable income and the mean in each year
final_public['ETR_2013'] = Tax_payable_2013 / final_public['Taxable income'].mean()
final_public['ETR_2014'] = Tax_payable_2014 / final_public['Taxable income'].mean()
final_public['ETR_2015'] = Tax_payable_2015 / final_public['Taxable income'].mean()
final_public['ETR_2016'] = Tax_payable_2016 / final_public['Taxable income'].mean()
final_public['ETR_2017'] = Tax_payable_2017 / final_public['Taxable income'].mean()
final_public['ETR_2018'] = Tax_payable_2018 / final_public['Taxable income'].mean()
final_public['ETR_2019'] = Tax_payable_2019 / final_public['Taxable income'].mean()

# ETR Mean of private firm

#first find the final_public with tax payable and taxable income values
final_public = final.loc[final['Public/Private'] == 'Private']
final_public.dropna(subset=['Tax payable', 'Taxable income'], how='all')


#ETR = tax payable / taxable income and the mean in each year
final_private['ETR_2013'] = Tax_payable_2013 / final_private['Taxable income'].mean()
final_private['ETR_2014'] = Tax_payable_2014 / final_private['Taxable income'].mean()
final_private['ETR_2015'] = Tax_payable_2015 / final_private['Taxable income'].mean()
final_private['ETR_2016'] = Tax_payable_2016 / final_private['Taxable income'].mean()
final_private['ETR_2017'] = Tax_payable_2017 / final_private['Taxable income'].mean()
final_private['ETR_2018'] = Tax_payable_2018 / final_private['Taxable income'].mean()
final_private['ETR_2019'] = Tax_payable_2019 / final_private['Taxable income'].mean()

# ETR Median of public firm

#first find the final_public with tax payable and taxable income values
final_public = final.loc[final['Public/Private'] == 'Public']
final_public.dropna(subset=['Tax payable', 'Taxable income'], how='all')


#ETR = tax payable / taxable income and the mean in each year
final_public['ETR_2013'] = Tax_payable_2013 / final_public['Taxable income'].median()
final_public['ETR_2014'] = Tax_payable_2014 / final_public['Taxable income'].median()
final_public['ETR_2015'] = Tax_payable_2015 / final_public['Taxable income'].median()
final_public['ETR_2016'] = Tax_payable_2016 / final_public['Taxable income'].median()
final_public['ETR_2017'] = Tax_payable_2017 / final_public['Taxable income'].median()
final_public['ETR_2018'] = Tax_payable_2018 / final_public['Taxable income'].median()
final_public['ETR_2019'] = Tax_payable_2019 / final_public['Taxable income'].median()

# ETR Median of private firm

#first find the final_public with tax payable and taxable income values
final_public = final.loc[final['Public/Private'] == 'Private']
final_public.dropna(subset=['Tax payable', 'Taxable income'], how='all')


#ETR = tax payable / taxable income and the mean in each year
final_private['ETR_2013'] = Tax_payable_2013 / final_private['Taxable income'].median()
final_private['ETR_2014'] = Tax_payable_2014 / final_private['Taxable income'].median()
final_private['ETR_2015'] = Tax_payable_2015 / final_private['Taxable income'].median()
final_private['ETR_2016'] = Tax_payable_2016 / final_private['Taxable income'].median()
final_private['ETR_2017'] = Tax_payable_2017 / final_private['Taxable income'].median()
final_private['ETR_2018'] = Tax_payable_2018 / final_private['Taxable income'].median()
final_private['ETR_2019'] = Tax_payable_2019 / final_private['Taxable income'].median()

"""**b.** Plot your results using an scatterplot. Try out different ways to portray the third, fourth variables - average type (mean or median), firm type (public or private)."""

# create an empty figure
# figsize width, height
fig= plt.figure(figsize = (10,15))

# add axes of equal sizes
# one row, two columns
topleft = fig.add_subplot(1, 2, 1)

topright = fig.add_subplot(1, 2, 2)


final[final_public['Public/Private'] == 'Public'].plot(x='Income Year', y='Public/Private', kind='scatter', ax= topleft, \
                                          title = 'Firm Type: Public', color = 'tab:blue', label = 'ETR Mean')
    
final[final_private['Public/Private'] == 'Private'].plot(x='Income Year', y='Public/Private', kind='scatter', ax= topright, \
                                         title = 'Firm Type: Private',  color = 'tab:blue', label = 'ETR Mean' )



final[final_public['Public/Private'] == 'Public'].plot(x='Income Year', y='Public/Private', kind='scatter', ax= topleft, \
                                          title = 'Firm Type: Public', color = 'tab:orange', label = 'ETR Median')
    
final[final_private['Public/Private'] == 'Private'].plot(x='Income Year', y='Public/Private', kind='scatter', ax= topright, \
                                          title = 'Firm Type: Private',  color = 'tab:orange', label = 'ETR Median')
    


#label x and y axis
topleft.set(xlabel='Income Year', ylabel='Firm Type')
topright.set(xlabel='Income Year', ylabel='Firm Type')


#overall figure title
fig.suptitle("Average (both mean and median) effective tax rate in each year for each type of firm (public and private)")


plt.tight_layout()

"""**c.**	Form a conclusion related to the data calculated and visualized in this step. What do you notice?

<div style="color:black;
           display:fill;
           border-radius:5px;
           background-color:#ABBAEA;>

            
<p style="padding: 10px;
              color:white;">
                           
**#4 Analysis:**

The scatterplot streghtens point from question 3 where there seems to be an opposit correlation between public and private companies. As the tax ETR increases, private firms have an upward trend with their total income. On the other hand, the opposite seems to happen to public companies because the law lead to them disclosing financial documents and making them less profitable overall with less total income, which effects lower effective tax rate.

## Calculate your Results - #5

In this question you will study tax deductions as a percentage of Total income.
   
      
      
      

<div align = "center"> <font size = 5> $\frac{Total income - Taxable income}{Total income}$ </font> </div>


Where ``Total income - Taxable income = Tax Deductions Claimed``

**a.** Calculate the total tax deductions claimed as a percentage of total income for each firm in each year.
"""

Taxable_income_2013 = final.loc[final['Income Year'] == 2013, 'Taxable income']
Taxable_income_2014 = final.loc[final['Income Year'] == 2014, 'Taxable income']
Taxable_income_2015 = final.loc[final['Income Year'] == 2015, 'Taxable income']
Taxable_income_2016 = final.loc[final['Income Year'] == 2016, 'Taxable income']
Taxable_income_2017 = final.loc[final['Income Year'] == 2017, 'Taxable income']
Taxable_income_2018 = final.loc[final['Income Year'] == 2018, 'Taxable income']
Taxable_income_2019 = final.loc[final['Income Year'] == 2019, 'Taxable income']

Tax_deductions_claimed = (final['Total income'] - final['Taxable income'])/final['Total income']

final['Tax deductions claimed_2013'] = (final['Total income'] - final['Taxable income'])/final['Total income']
final['Tax deductions claimed_2014'] = (final['Total income'] - final['Taxable income'])/final['Total income']
final['Tax deductions claimed_2015'] = (final['Total income'] - final['Taxable income'])/final['Total income']
final['Tax deductions claimed_2016'] = (final['Total income'] - final['Taxable income'])/final['Total income']
final['Tax deductions claimed_2017'] = (final['Total income'] - final['Taxable income'])/final['Total income']
final['Tax deductions claimed_2018'] = (final['Total income'] - final['Taxable income'])/final['Total income']
final['Tax deductions claimed_2019'] = (final['Total income'] - final['Taxable income'])/final['Total income']

"""**b.** Find the mean and median of the ratio you just calculated in each year. Further bifurcate your results for public and private firms."""

final['Tax deductions claimed_2013'] = (final['Total income'] - final['Taxable income'])/final['Total income'].mean()
final['Tax deductions claimed_2014'] = (final['Total income'] - final['Taxable income'])/final['Total income'].mean()
final['Tax deductions claimed_2015'] = (final['Total income'] - final['Taxable income'])/final['Total income'].mean()
final['Tax deductions claimed_2016'] = (final['Total income'] - final['Taxable income'])/final['Total income'].mean()
final['Tax deductions claimed_2017'] = (final['Total income'] - final['Taxable income'])/final['Total income'].mean()
final['Tax deductions claimed_2018'] = (final['Total income'] - final['Taxable income'])/final['Total income'].mean()
final['Tax deductions claimed_2019'] = (final['Total income'] - final['Taxable income'])/final['Total income'].mean()

final['Tax deductions claimed_2013'] = (final['Total income'] - final['Taxable income'])/final['Total income'].median()
final['Tax deductions claimed_2014'] = (final['Total income'] - final['Taxable income'])/final['Total income'].median()
final['Tax deductions claimed_2015'] = (final['Total income'] - final['Taxable income'])/final['Total income'].median()
final['Tax deductions claimed_2016'] = (final['Total income'] - final['Taxable income'])/final['Total income'].median()
final['Tax deductions claimed_2017'] = (final['Total income'] - final['Taxable income'])/final['Total income'].median()
final['Tax deductions claimed_2018'] = (final['Total income'] - final['Taxable income'])/final['Total income'].median()
final['Tax deductions claimed_2019'] = (final['Total income'] - final['Taxable income'])/final['Total income'].median()

"""**c.** Create the same plot you did for #4b except plot tax deductions as a percentage of total income instead of ETRs."""

final[final_private['Public/Private'] == 'Private'].plot(x='Income Year', y='Public/Private', kind='scatter', \
                                          title = 'Firm Type: Private',  color = 'tab:orange', label = 'Total income')

final[final_public['Public/Private'] == 'Public'].plot(x='Income Year', y='Public/Private', kind='scatter', \
                                          title = 'Firm Type: Public',  color = 'tab:orange', label = 'Total income')

"""**d.** Create the following visualization:

- Create one figure with four axes- 2*2.

- In the first row plot mean ETRs in one axes and mean tax deductions as a percentage of total income on the other

- In the second row plot median ETRs in one axes and median tax deductions as a percentage of total income on the other

- Separate public and private firms with color

- Label everything
"""

# create an empty figure
# figsize width, height
fig= plt.figure(figsize = (10,15))

# add axes of equal sizes
# one row, two columns
topleft = fig.add_subplot(1, 2, 1)

topright = fig.add_subplot(1, 2, 2)

bottomleft = fig.add_subplot(2, 2, 3)

bottomright = fig.add_subplot(2, 2, 4)


final[final_public['Public/Private'] == 'Public'].plot(x='ETR', y='Public/Private', kind='scatter', ax= topleft, \
                                          title = 'Firm Type: Public', color = 'tab:blue', label = 'ETR Mean')
    
final[final_private['Public/Private'] == 'Private'].plot(x='Income Year', y='Public/Private', kind='scatter', ax= topright, \
                                         title = 'Firm Type: Private',  color = 'tab:blue', label = 'ETR Mean' )



final[final_public['Public/Private'] == 'Public'].plot(x='ETR', y='Public/Private', kind='scatter', ax= bottomleft, \
                                          title = 'Firm Type: Public', color = 'tab:blue', label = 'ETR Median')
    
final[final_private['Public/Private'] == 'Private'].plot(x='Income Year', y='Public/Private', kind='scatter', ax= bottomright, \
                                         title = 'Firm Type: Private',  color = 'tab:blue', label = 'ETR Median' )


#label x and y axis
topleft.set(xlabel='ETR', ylabel='Firm Type')
topright.set(xlabel='ETR', ylabel='Firm Type')


#overall figure title
fig.suptitle("ETRs in one axes and median tax deductions as a percentage of total income on the other")


plt.tight_layout()

"""**e.** Form a conclusion related to the data calculated and visualized in this step. What do you notice?

Once again, an opposite trend from public and private firms.

<div style="color:black;
           display:fill;
           border-radius:5px;
           background-color:#ABBAEA;>

            
<p style="padding: 10px;
              color:white;">
                           
**#5 Analysis:**

The scatterplot (again) streghtens point from question 3 and 4 where there seems to be an opposit correlation between public and private companies. As the tax ETR increases, private firms have an upward trend with their tax deductions as a percentage of total income. On the other hand, the opposite seems to happen to public companies because the law lead to them disclosing financial documents and making them less profitable overall with less tax deductions as a percentage of total income.

## Tell Others

Based on all of the evidence that you collected, what do you conclude about the effectiveness of the new tax transparency law in Australia? Did it have the effect that lawmakers intended?

Keep in mind that all of the analysis we did is descriptive, so we are unable to derive complete conclusions, however, we can still make general inferences.

<div style="color:black;
           display:fill;
           border-radius:5px;
           background-color:#90EE90;>

            
<p style="padding: 10px;
              color:white;">
                           
**Final Conclusion:**


The Australian Government passed a policy in December 2015 to promote transparent reports and increase the tax collection. The percent change of tax payable in the 2015-2016 period increased by 20.18%, substantially higher than the 10.57% increase in Total Income. Both companies (public and private) reported an increase in total income with ann increase of collected taxes amounts. Due to a steady increase of this phenomena, the policy seems to be efficient.

Taking a deeper look into private firms, they yielded a higher percentage of companies that had positive percent changes in total income such as Hong Kong and Shanghai Banking Corporation, with a staggering 669.81%. However, its % change in taxable income and tax payable decreased significantly. Also, as the tax ETR increases, private firms have an upward trend with their total income, which shows how profitable they are. However, public companies have the opposite trend. because the law lead to them disclosing financial documents and making them less profitable overall with less total income, which effects lower effective tax rate.

This indicates that the policy has a loophole for private firms to fabricate their reporting of taxable income and tax payable or (generally) it's an ineffective policy for private firms as a whole. This explains why there was a decrease in the number of private companies that reported no tax liability. It also explains that the policy lead to them disclosing financial documents and making them less profitable overall with less total income, which effects lower effective tax rate. 

On the other hand, this also explains why the policy is effective for public companies by showing an opposite trend. They typically have public (discolosed) financial documents and it's harder for them to manipulate the income statements or find a loophole in the system when reporting.
"""